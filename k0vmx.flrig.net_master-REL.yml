# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pr:
- master

name: $(Date:yyyy.MM.dd)$(Rev:.r)

pool:
  name: Azure Pipelines
  vmImage: 'windows-latest'
  demands:
  - msbuild
  - visualstudio
  - vstest

variables:
  buildConfiguration: 'Release'

steps:
- task: Assembly-Info-NetCore@2
  inputs:
    Path: '$(Build.SourcesDirectory)'
    FileNames: '**/*.csproj'
    InsertAttributes: false
    FileEncoding: 'auto'
    WriteBOM: false
    Product: 'flrig.net'
    Copyright: 'Copyright Â© $(date:YYYY) John K0VMX'
    PackageProjectUrl: 'https://github.com/johnmbaughman/flrig.net'
    VersionNumber: '$(Build.BuildNumber)-release'
    LogLevel: 'verbose'
    FailOnWarning: false
    DisableTelemetry: false

- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    feedsToUse: 'select'
    vstsFeed: '313927da-0007-44a8-84b0-ddec34e1d3a6'
    projects: '**\flrig.net.sln'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration)'
    projects: '**\flrig.net.sln'
  displayName: 'dotnet build $(buildConfiguration)'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)\src\flrig.net\flrig.net\bin\Release\netcoreapp3.1\'
    Contents: '**'
    TargetFolder: '$(Build.BinariesDirectory)'
    CleanTargetFolder: true

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/flrig.net.$(Build.BuildNumber).zip'
    replaceExistingArchive: true
    
- task: GitHubRelease@1
  displayName: 'GitHub release (create)'
  inputs:
    gitHubConnection: 'github connection 1'
    repositoryName: johnmbaughman/flrig.net
    tagSource: userSpecifiedTag
    tag: 'v$(Build.BuildNumber)'
